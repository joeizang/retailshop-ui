/* tslint:disable */
/* eslint-disable */
/**
 * Retail Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UnitMeasure } from './UnitMeasure';
import {
    UnitMeasureFromJSON,
    UnitMeasureFromJSONTyped,
    UnitMeasureToJSON,
} from './UnitMeasure';

/**
 * 
 * @export
 * @interface UpdateProductInputModel
 */
export interface UpdateProductInputModel {
    /**
     * 
     * @type {string}
     * @memberof UpdateProductInputModel
     */
    productId?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateProductInputModel
     */
    productName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof UpdateProductInputModel
     */
    dateSupplied?: Date;
    /**
     * 
     * @type {number}
     * @memberof UpdateProductInputModel
     */
    productCostPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateProductInputModel
     */
    quantity?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateProductInputModel
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UpdateProductInputModel
     */
    retailPrice?: number;
    /**
     * 
     * @type {UnitMeasure}
     * @memberof UpdateProductInputModel
     */
    unitMeasure?: UnitMeasure;
}

/**
 * Check if a given object implements the UpdateProductInputModel interface.
 */
export function instanceOfUpdateProductInputModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateProductInputModelFromJSON(json: any): UpdateProductInputModel {
    return UpdateProductInputModelFromJSONTyped(json, false);
}

export function UpdateProductInputModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProductInputModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productId': !exists(json, 'productId') ? undefined : json['productId'],
        'productName': !exists(json, 'productName') ? undefined : json['productName'],
        'dateSupplied': !exists(json, 'dateSupplied') ? undefined : (new Date(json['dateSupplied'])),
        'productCostPrice': !exists(json, 'productCostPrice') ? undefined : json['productCostPrice'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'retailPrice': !exists(json, 'retailPrice') ? undefined : json['retailPrice'],
        'unitMeasure': !exists(json, 'unitMeasure') ? undefined : UnitMeasureFromJSON(json['unitMeasure']),
    };
}

export function UpdateProductInputModelToJSON(value?: UpdateProductInputModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'productId': value.productId,
        'productName': value.productName,
        'dateSupplied': value.dateSupplied === undefined ? undefined : (value.dateSupplied.toISOString()),
        'productCostPrice': value.productCostPrice,
        'quantity': value.quantity,
        'description': value.description,
        'retailPrice': value.retailPrice,
        'unitMeasure': UnitMeasureToJSON(value.unitMeasure),
    };
}

