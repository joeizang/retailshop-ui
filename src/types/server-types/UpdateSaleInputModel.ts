/* tslint:disable */
/* eslint-disable */
/**
 * Retail Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductToBeSold } from './ProductToBeSold';
import {
    ProductToBeSoldFromJSON,
    ProductToBeSoldFromJSONTyped,
    ProductToBeSoldToJSON,
} from './ProductToBeSold';

/**
 * 
 * @export
 * @interface UpdateSaleInputModel
 */
export interface UpdateSaleInputModel {
    /**
     * 
     * @type {Array<ProductToBeSold>}
     * @memberof UpdateSaleInputModel
     */
    products?: Array<ProductToBeSold> | null;
    /**
     * 
     * @type {Date}
     * @memberof UpdateSaleInputModel
     */
    saleDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof UpdateSaleInputModel
     */
    shopUserId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UpdateSaleInputModel
     */
    grandTotal?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateSaleInputModel
     */
    saleId?: string;
}

/**
 * Check if a given object implements the UpdateSaleInputModel interface.
 */
export function instanceOfUpdateSaleInputModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateSaleInputModelFromJSON(json: any): UpdateSaleInputModel {
    return UpdateSaleInputModelFromJSONTyped(json, false);
}

export function UpdateSaleInputModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSaleInputModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'products': !exists(json, 'products') ? undefined : (json['products'] === null ? null : (json['products'] as Array<any>).map(ProductToBeSoldFromJSON)),
        'saleDate': !exists(json, 'saleDate') ? undefined : (new Date(json['saleDate'])),
        'shopUserId': !exists(json, 'shopUserId') ? undefined : json['shopUserId'],
        'grandTotal': !exists(json, 'grandTotal') ? undefined : json['grandTotal'],
        'saleId': !exists(json, 'saleId') ? undefined : json['saleId'],
    };
}

export function UpdateSaleInputModelToJSON(value?: UpdateSaleInputModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'products': value.products === undefined ? undefined : (value.products === null ? null : (value.products as Array<any>).map(ProductToBeSoldToJSON)),
        'saleDate': value.saleDate === undefined ? undefined : (value.saleDate.toISOString()),
        'shopUserId': value.shopUserId,
        'grandTotal': value.grandTotal,
        'saleId': value.saleId,
    };
}

