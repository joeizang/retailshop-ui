/* tslint:disable */
/* eslint-disable */
/**
 * Retail Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductSold } from './ProductSold';
import {
    ProductSoldFromJSON,
    ProductSoldFromJSONTyped,
    ProductSoldToJSON,
} from './ProductSold';
import type { ShopUser } from './ShopUser';
import {
    ShopUserFromJSON,
    ShopUserFromJSONTyped,
    ShopUserToJSON,
} from './ShopUser';

/**
 * 
 * @export
 * @interface Sale
 */
export interface Sale {
    /**
     * 
     * @type {string}
     * @memberof Sale
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof Sale
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Sale
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Sale
     */
    createdBy?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Sale
     */
    updatedBy?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Sale
     */
    isDeleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Sale
     */
    rowVersion?: Date;
    /**
     * 
     * @type {Array<ProductSold>}
     * @memberof Sale
     */
    products?: Array<ProductSold> | null;
    /**
     * 
     * @type {Date}
     * @memberof Sale
     */
    saleDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Sale
     */
    shopUserId?: string | null;
    /**
     * 
     * @type {ShopUser}
     * @memberof Sale
     */
    shopUser?: ShopUser;
    /**
     * 
     * @type {string}
     * @memberof Sale
     */
    salesPerson?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Sale
     */
    readonly grandTotal?: number;
}

/**
 * Check if a given object implements the Sale interface.
 */
export function instanceOfSale(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SaleFromJSON(json: any): Sale {
    return SaleFromJSONTyped(json, false);
}

export function SaleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Sale {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
        'isDeleted': !exists(json, 'isDeleted') ? undefined : json['isDeleted'],
        'rowVersion': !exists(json, 'rowVersion') ? undefined : (new Date(json['rowVersion'])),
        'products': !exists(json, 'products') ? undefined : (json['products'] === null ? null : (json['products'] as Array<any>).map(ProductSoldFromJSON)),
        'saleDate': !exists(json, 'saleDate') ? undefined : (new Date(json['saleDate'])),
        'shopUserId': !exists(json, 'shopUserId') ? undefined : json['shopUserId'],
        'shopUser': !exists(json, 'shopUser') ? undefined : ShopUserFromJSON(json['shopUser']),
        'salesPerson': !exists(json, 'salesPerson') ? undefined : json['salesPerson'],
        'grandTotal': !exists(json, 'grandTotal') ? undefined : json['grandTotal'],
    };
}

export function SaleToJSON(value?: Sale | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'createdBy': value.createdBy,
        'updatedBy': value.updatedBy,
        'isDeleted': value.isDeleted,
        'rowVersion': value.rowVersion === undefined ? undefined : (value.rowVersion.toISOString()),
        'products': value.products === undefined ? undefined : (value.products === null ? null : (value.products as Array<any>).map(ProductSoldToJSON)),
        'saleDate': value.saleDate === undefined ? undefined : (value.saleDate.toISOString()),
        'shopUserId': value.shopUserId,
        'shopUser': ShopUserToJSON(value.shopUser),
        'salesPerson': value.salesPerson,
    };
}

