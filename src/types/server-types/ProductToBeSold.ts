/* tslint:disable */
/* eslint-disable */
/**
 * Retail Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UnitMeasure } from './UnitMeasure';
import {
    UnitMeasureFromJSON,
    UnitMeasureFromJSONTyped,
    UnitMeasureToJSON,
} from './UnitMeasure';

/**
 * 
 * @export
 * @interface ProductToBeSold
 */
export interface ProductToBeSold {
    /**
     * 
     * @type {string}
     * @memberof ProductToBeSold
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductToBeSold
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ProductToBeSold
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof ProductToBeSold
     */
    saleId?: string;
    /**
     * 
     * @type {UnitMeasure}
     * @memberof ProductToBeSold
     */
    unitMeasure?: UnitMeasure;
    /**
     * 
     * @type {number}
     * @memberof ProductToBeSold
     */
    quantityInStock?: number;
    /**
     * 
     * @type {number}
     * @memberof ProductToBeSold
     */
    quanityToBeSold?: number;
}

/**
 * Check if a given object implements the ProductToBeSold interface.
 */
export function instanceOfProductToBeSold(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductToBeSoldFromJSON(json: any): ProductToBeSold {
    return ProductToBeSoldFromJSONTyped(json, false);
}

export function ProductToBeSoldFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductToBeSold {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'saleId': !exists(json, 'saleId') ? undefined : json['saleId'],
        'unitMeasure': !exists(json, 'unitMeasure') ? undefined : UnitMeasureFromJSON(json['unitMeasure']),
        'quantityInStock': !exists(json, 'quantityInStock') ? undefined : json['quantityInStock'],
        'quanityToBeSold': !exists(json, 'quanityToBeSold') ? undefined : json['quanityToBeSold'],
    };
}

export function ProductToBeSoldToJSON(value?: ProductToBeSold | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'price': value.price,
        'saleId': value.saleId,
        'unitMeasure': UnitMeasureToJSON(value.unitMeasure),
        'quantityInStock': value.quantityInStock,
        'quanityToBeSold': value.quanityToBeSold,
    };
}

